<template>
    <div>

      <!-- params: {{this.$route.params.id}},{{this.$route.params.title}}
      props : {{id}},{{title}} -->

      <div class="containser">
        <div class="row">
            
            <div class="col-sm">
              images
            </div>

            <div class="col-sm">
              introduction
            </div>

            <div class="col-sm">
              sales
            </div>
        </div>
      </div>
      

      <div class="container">
        <div class="row">
          shipment
        </div>
        <div class="row">
          shipment2
        </div>
      </div>

      <b-card>
              <div>
                similar products
              </div>
      </b-card>

      <div class="container">
        <b-card no-body>
          <b-tabs content-class="m-4" card>

          <b-tab :title="this.$t('PRODUCT_comments')">
                      comments ,
          </b-tab>

          <b-tab :title="this.$t('PRODUCT_features')">
                      features ,
                      <div>
                        <div v-for="group in groupIdsWithNames" :key="group.id">
                            <div>

                              {{group.gname}}

                              <div v-if="group.gitems">

                                  <div>
                                    <div v-for="im in group.gitems" :key="group.id">                                  

                                      {{im.itemname}}

                                      <div v-if="im.itemvalues">
                                        <div>
                                          <div v-for="iin in im.itemvalues" :key="group.id">
                                            {{iin.itemvalue}}
                                          </div>
                                        </div>
                                      </div>


                                    </div>
                                  </div> 
                              </div>
                              

                            </div>
                        </div>
                      </div>
          </b-tab>

          <b-tab :title="this.$t('PRODUCT_REVIEW')">
                      
          </b-tab>

          <b-tab :title="this.$t('PRODUCT_quesAndAns')">
                      quesAndAns
          </b-tab>

        </b-tabs>

        </b-card>
      </div>
    </div>
</template>

<script>

import axios from 'axios'

export default {
    name:'product',
    props:{
            id:Number,
            title:String
          } ,
    data(){
      return {
        numberOfStars:'',
        numberOfViewsOfUsers:'',
        numberOfComments:'',
        brand:'',
        category:'',
        availableColors:'',
        topFeatures:'',
        thumbNamilImages:'',
        LargeImages:'',      
        searchResult:[],      

        groupIds:[],
        groupIdsWithNames:[],
        itemIds:[],
        itemIdsWithNames:[],
        itemsIds:[],

      }
    } ,
    methods:{
          onSearchResult() {                
                var self = this;

                var groupIds = self.groupIds;
                var itemIds =  self.itemIds;
                var groupIdsWithNames = self.groupIdsWithNames;
                var idx = 0 ;

                this.errors= {};
                this.isBusy = true;
                axios({
                    method:'GET',
                    url:'http://localhost:8080/f2f/products/features',
                    params:{
                        'access_token' : localStorage.getItem('access_token')                            
                    }
                })
                .then(function(res){

                      self.searchResult = res.data; 
                      for(const feature of self.searchResult){

                        if(!groupIds.includes(feature.groupId)){
                          if(feature.groupId)
                            groupIds.push(feature.groupId);
                            groupIdsWithNames.push({gid:feature.groupId,gname:feature.groupName,gitems:[]});
                        }

                        if(!itemIds.includes(feature.itemId)){
                          if(feature.itemId){
                            itemIds.push(feature.itemId);

                            for(const [i,g] of groupIdsWithNames.entries()){
                              if(g.gid===feature.groupId){
                                  groupIdsWithNames[i].gitems.push({itemid:feature.itemId,itemname:feature.itemName,itemvalues:[]});
                                  
                                  //start of my block
                                  if(feature.itemsId){
                                    if(groupIdsWithNames[i].gitems)
                                    for(idx=0;idx<groupIdsWithNames[i].gitems.length;idx++){
                                        if(feature.itemId===groupIdsWithNames[i].gitems[idx].itemid){
                                            console.log(idx +" , " + groupIdsWithNames[i].gitems[idx]) ;
                                            groupIdsWithNames[i].gitems[idx].itemvalues.push({itemid:feature.itemsId,itemvalue:feature.itemsName});
                                        }                                          
                                    }                                    
                                  }//end of my block
                              }                                
                            }                            
                          }                        
                        }
                        


                      }

                      console.log(groupIdsWithNames);
                      self.isBusy=false;
                })
                .catch(function(error){
                    console.log(error)    ;
                });
          }
    }      ,
    mounted(){
        this.onSearchResult();
    }
}
</script>

<style scoped>

</style>